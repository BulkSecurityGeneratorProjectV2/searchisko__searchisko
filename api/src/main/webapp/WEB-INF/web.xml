<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">

	<display-name>Searchisko : API</display-name>
	<description>
        The main Searchisko API
    </description>

    <session-config>
        <session-timeout>30</session-timeout>
        <cookie-config>
            <!-- Define if cookies should be transported only via secured connection -->
            <secure>false</secure>
        </cookie-config>
    </session-config>

	<security-constraint>
		<web-resource-collection>
			<web-resource-name>REST api</web-resource-name>
			<url-pattern>/v1/rest/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>NONE</transport-guarantee>
		</user-data-constraint>
	</security-constraint>

    <!--
    Do not use security constraint for auth/status. Using it would mean that https protocol would have
    to be used for all REST requests to send cookies with auth ticket. For now we do not need to care
    about security risks much because stealing auth ticket does not represent big risk for system.
    But going forward we might need to force https.
    -->
    <!--<security-constraint>-->
        <!--<web-resource-collection>-->
            <!--<web-resource-name>Login</web-resource-name>-->
            <!--<url-pattern>/v1/rest/auth/status</url-pattern>-->
            <!--<http-method>GET</http-method>-->
            <!--<http-method>POST</http-method>-->
        <!--</web-resource-collection>-->
        <!--<user-data-constraint>-->
            <!-- Tell what transport should be used for page under ${url-pattern} URL. Values are NONE or CONFIDENTIAL -->
            <!--<transport-guarantee>CONFIDENTIAL</transport-guarantee>-->
        <!--</user-data-constraint>-->
    <!--</security-constraint>-->


    <!-- SSO calls this to drop HTTP session if user is logged out -->
    <filter>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
    </filter>

    <!-- if user is logged in SSO then this returns the ticket -->
    <filter>
        <filter-name>CAS Authentication Filter</filter-name>
        <filter-class>org.jboss.cas.client.ExtendedAuthenticationFilter</filter-class>
        <init-param>
            <param-name>casServerLoginUrl</param-name>
            <param-value>${cas.ssoServerUrl}/login</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>${cas.serverName}</param-value>
        </init-param>
        <!-- Does not force login form if user is not authenticated -->
        <init-param>
            <param-name>gateway</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>ignoreAjaxCalls</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>

    <!-- if ticket is available, verify validity of the ticket and store CAS user info into session -->
    <filter>
        <filter-name>CAS Validation Filter</filter-name>
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
        <init-param>
            <param-name>casServerUrlPrefix</param-name>
            <param-value>${cas.ssoServerUrl}</param-value>
        </init-param>
        <init-param>
            <param-name>serverName</param-name>
            <param-value>${cas.serverName}</param-value>
        </init-param>
        <init-param>
            <param-name>proxyGrantingTicketStorageClass</param-name>
            <param-value>org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl</param-value>
        </init-param>
    </filter>


    <filter-mapping>
        <filter-name>CAS Single Sign Out Filter</filter-name>
        <url-pattern>/v1/rest/auth/status</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CAS Authentication Filter</filter-name>
        <url-pattern>/v1/rest/auth/status</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>
        <url-pattern>/v1/rest/auth/status</url-pattern>
    </filter-mapping>


    <listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>